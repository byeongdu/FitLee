function BLFit_plotstyle(varargin)
hFitLee = [];
col = num2cell(1:5);

if numel(varargin) > 0
    hFitLee = varargin{1}.FitLee;
else
    hFitLee = findobj(0, 'tag', 'FitLee');
end
if ~isempty(hFitLee)
    posFitLee = get(hFitLee, 'position');
else
    posFitLee = get(gcf, 'position');
end
pos = [posFitLee(1)+posFitLee(3),posFitLee(2), 100, 200];
figH = figure(...
  'position'                    , pos,...
  'visible'                       , 'on', ...
  'units'                         , 'pixel', ...
  'busyaction'                    , 'queue', ...
  'doublebuffer'                  , 'on', ...
  'handlevisibility'              , 'callback', ...
  'IntegerHandle'                 , 'off',...
  'interruptible'                 , 'on', ...
  'menubar'                       , 'none', ...
  'numbertitle'                   , 'off', ...
  'resize'                        , 'off', ...
  'name'                          , 'Plot options', ...
  'tag'                           , 'FitLee_plot_options', ...
  'toolbar'                       , 'none', ...
  'defaultaxesunits'              , 'pixels', ...
  'defaulttextfontunits'          , 'pixels', ...
  'defaulttextfontname'           , 'Verdana', ...
  'defaulttextfontsize'           , 12, ...
  'defaultuicontrolunits'         , 'pixels', ...
  'defaultuicontrolfontunits'     , 'pixels', ...
  'defaultuicontrolfontsize'      , 10, ...
  'defaultuicontrolfontname'      , 'Verdana', ...
  'defaultuicontrolinterruptible' , 'off');
        uph = uipanel(...
          'units'                     , 'pixels', ...
          'parent'                    , figH, ...
          'BackgroundColor'             , [0, 0.5, 0.5],...
          'ForegroundColor'             ,[0, 0, 1],...
          'Borderwidth'                 ,1,...
          'Units'                       , 'normalized', ...
          'position'                    ,   [0, 0, 1, 1],...
          'bordertype'                , 'beveledin', ...
          'tag'                       , 'versionPanel');

uicontrol(...
  'style'                     , 'text', ...
  'backgroundcolor'           , [0,0.5,0.5], ...
  'foregroundcolor'           , [1,1,1], ...
  'horizontalalignment'       , 'Left', ...
  'parent'                    , uph, ...
  'string'                    , 'Which column for X?',...
  'position'                  ,[1, 200-20,120,20], ...
  'Units'                     , 'pixel', ...
  'tag'                       , 'text_Xcol');

uicontrol(...
  'style'                     , 'popupmenu', ...
  'backgroundcolor'           , [0,0.5,0.5], ...
  'foregroundcolor'           , [1,1,1], ...
  'horizontalalignment'       , 'Left', ...
  'parent'                    , uph, ...
  'string'                    , col,...
  'position'                  ,[1, 200-40,120,20], ...
  'Units'                     , 'pixel', ...
  'tag'                       , 'pm_Xcol');


uicontrol(...
  'style'                     , 'text', ...
  'backgroundcolor'           , [0,0.5,0.5], ...
  'foregroundcolor'           , [1,1,1], ...
  'horizontalalignment'       , 'Left', ...
  'parent'                    , uph, ...
  'string'                    , 'Which column for Y?',...
  'position'                  ,[1, 200-60,120,20], ...
  'Units'                     , 'pixel', ...
  'tag'                       , 'text_Ycol');

uicontrol(...
  'style'                     , 'popupmenu', ...
  'backgroundcolor'           , [0,0.5,0.5], ...
  'foregroundcolor'           , [1,1,1], ...
  'horizontalalignment'       , 'Left', ...
  'parent'                    , uph, ...
  'string'                    , col,...
  'value'                     , 2,... %default
  'position'                  ,[1, 200-80,120,20], ...
  'Units'                     , 'pixel', ...
  'tag'                       , 'pm_Ycol');


uicontrol(...
  'style'                     , 'text', ...
  'backgroundcolor'           , [0,0.5,0.5], ...
  'foregroundcolor'           , [1,1,1], ...
  'horizontalalignment'       , 'Left', ...
  'parent'                    , uph, ...
  'string'                    , 'Plot style ?',...
  'position'                  ,[1, 200-100,120,20], ...
  'Units'                     , 'pixel', ...
  'tag'                       , 'text_plotstyle');

uicontrol(...
  'style'                     , 'popupmenu', ...
  'backgroundcolor'           , [0,0.5,0.5], ...
  'foregroundcolor'           , [1,1,1], ...
  'horizontalalignment'       , 'Left', ...
  'parent'                    , uph, ...
  'string'                    , {'plot', 'semilogyx', 'semilogy', 'loglog'},...
  'position'                  ,[1, 200-120,120,20], ...
  'value'                     , 4,... %default: loglog
  'Units'                     , 'pixel', ...
  'tag'                       , 'pm_plotstyle');


uicontrol(...
  'style'                     , 'pushbutton', ...
  'backgroundcolor'           , [0,0.5,0.5], ...
  'foregroundcolor'           , [1,1,1], ...
  'horizontalalignment'       , 'center', ...
  'parent'                    , uph, ...
  'string'                    , 'DONE',...
  'position'                  ,[1, 200-140,120,20], ...
  'Units'                     , 'pixel', ...
  'callback'                  , @set_callback,...
  'tag'                       , 'pb_setstyle');

function set_callback(varargin)
handles = guihandles(gcbf);
Xcolstr = get(handles.pm_Xcol, 'string');
Xcol = Xcolstr{get(handles.pm_Xcol, 'value')};
Ycolstr = get(handles.pm_Ycol, 'string');
Ycol = Ycolstr{get(handles.pm_Ycol, 'value')};
style = get(handles.pm_plotstyle, 'string');
pstyle = get(handles.pm_plotstyle, 'value');
plotstyle = style{pstyle};
sty.Xcol = str2double(Xcol);
sty.Ycol = str2double(Ycol);
sty.plotstyle = plotstyle;
setappdata(hFitLee, 'plotstyle', sty)
figh = str2double(get(findobj(hFitLee, 'tag', 'edit_Figure'), 'string'));
if ~isempty(figh)
    try
        ax = findobj(figh, 'type', 'axes');
    catch
        ax = [];
    end
    if isempty(ax)
        return;
    end
    switch plotstyle
        case 'loglog'
            set(ax, 'xscale', 'log');
            set(ax, 'yscale', 'log');
        case 'semilogx'
            set(ax, 'xscale', 'log');
            set(ax, 'yscale', 'linear');
        case 'semilogy'
            set(ax, 'xscale', 'linear');
            set(ax, 'yscale', 'log');
        case 'plot'
            set(ax, 'xscale', 'linear');
            set(ax, 'yscale', 'linear');
    end
end
delete(gcbf);
end
end