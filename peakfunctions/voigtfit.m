function voigtfit(varargin)
% voightfit ('function name', parameter, prefitfunctionname)
fitfunctionname = 'multivoight';% default function;

if numel(varargin) >= 1
    fitfunctionname = varargin{1};
end
fitFunHandle =  str2func(fitfunctionname);
if numel(varargin) < 2
    p = fitFunHandle();
    voigtfit(fitfunctionname, p);
    return
end

% if numel(varargin) == 2 now proceed to make fit GUI.
bestP = varargin{2};

% Define pre_fitFunHandle...
% This function will be run before simulation and fitting...
% This is added for the case requiring pre processing such as calculate
% Rmat for size distribution function fitting..
if numel(varargin) == 3;
    pre_fitfunctionname = varargin{3};
    pre_fitFunHandle =  str2func(pre_fitfunctionname);
else
    pre_fitFunHandle = [];
end
figH = initFigure;
handles = guihandles(figH);
  
    function figH = initFigure
        pnames = fieldnames(bestP);
        posScreen   = get(0,'screenSize');
        hFigWidth   = 600;
        hFigHeight  = numel(pnames)*20 + 100;
        hFigPos     = [...
            posScreen(3)/2-hFigWidth/2,...
            posScreen(4)/2-hFigHeight/2,...
            hFigWidth,hFigHeight];

        figH = figure(...
          'position'                    , hFigPos,...
          'visible'                       , 'on', ...
          'units'                         , 'pixel', ...
          'busyaction'                    , 'queue', ...
          'doublebuffer'                  , 'on', ...
          'handlevisibility'              , 'callback', ...
          'IntegerHandle'                 , 'off',...
          'interruptible'                 , 'on', ...
          'menubar'                       , 'none', ...
          'numbertitle'                   , 'off', ...
          'resize'                        , 'off', ...
          'name'                        , ['Data fit for ', fitfunctionname], ...
          'tag'                           , 'BLee_Fit', ...
          'toolbar'                       , 'none', ...
          'defaultaxesunits'              , 'pixels', ...
          'defaulttextfontunits'          , 'pixels', ...
          'defaulttextfontname'           , 'Verdana', ...
          'defaulttextfontsize'           , 12, ...
          'defaultuicontrolunits'         , 'pixels', ...
          'defaultuicontrolfontunits'     , 'pixels', ...
          'defaultuicontrolfontsize'      , 10, ...
          'defaultuicontrolfontname'      , 'Verdana', ...
          'defaultuicontrolinterruptible' , 'off');

        % Data loading and selection control
        uph = uipanel(...
          'units'                     , 'pixels', ...
          'parent'                    , figH, ...
          'BackgroundColor'             , [0, 0.5, 0.5],...
          'ForegroundColor'             ,[0, 0, 1],...
          'Borderwidth'                 ,2,...
          'Units'                       , 'normalized', ...
          'position'                    ,   [0, 0, 0.36, 1],...
          'bordertype'                , 'beveledin', ...
          'tag'                       , 'versionPanel');

        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   'Load data',...
          'callback'                , @pb_loaddata_Callback,...
          'position'                  ,[10, hFigHeight-50,100,25], ...
          'tag'                       , 'pb_loaddata');
        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   'Fit region read from cursors',...
          'callback'                , @pushbutton_qselect_Callback,...
          'position'                  ,[10, hFigHeight-130,200,25], ...
          'tag'                       , 'pushbutton_qselect');

        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   '<',...
          'callback'                , @pb_LL_Callback,...
          'position'                  ,[180, hFigHeight-50-160,15,20], ...
          'tag'                       , 'pb_LL');
        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   '>',...
          'callback'                , @pb_LU_Callback,...
          'position'                  ,[195, hFigHeight-50-160,15,20], ...
          'tag'                       , 'pb_LU');
        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   '<',...
          'callback'                , @pb_RL_Callback,...
          'position'                  ,[180, hFigHeight-50-180,15,20], ...
          'tag'                       , 'pb_RL');
        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   '>',...
          'callback'                , @pb_RU_Callback,...
          'position'                  ,[195, hFigHeight-50-180,15,20], ...
          'tag'                       , 'pb_RU');

        uicontrol(...
          'style'                     , 'edit', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   '',...
          'callback'                , @edit_Figure_Callback,...
          'position'                  ,[100, hFigHeight-50-50,100,25], ...
          'tag'                       , 'edit_Figure');
        uicontrol(...
          'style'                     , 'edit', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   '',...
          'callback'                , @edit_Lq_Callback,...
          'position'                  ,[100, hFigHeight-50-110,80,20], ...
          'tag'                       , 'edit_Lq');
        uicontrol(...
          'style'                     , 'edit', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   '',...
          'callback'                , @edit_Rq_Callback,...
          'position'                  ,[100, hFigHeight-50-130,80,20], ...
          'tag'                       , 'edit_Rq');
        uicontrol(...
          'style'                     , 'edit', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   '',...
          'callback'                , @edit_Lindex_Callback,...
          'position'                  ,[100, hFigHeight-50-160,80,20], ...
          'tag'                       , 'edit_Lindex');
        uicontrol(...
          'style'                     , 'edit', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   '',...
          'callback'                , @edit_Rindex_Callback,...
          'position'                  ,[100, hFigHeight-50-180,80,20], ...
          'tag'                       , 'edit_Rindex');

        uicontrol(...
          'style'                     , 'text', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   'Pick Figure',...
          'position'                  ,[10, hFigHeight-50-50,80,25], ...
          'tag'                       , 'text0');
        uicontrol(...
          'style'                     , 'text', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   'q min',...
          'position'                  ,[50, hFigHeight-50-110,50,20], ...
          'tag'                       , 'text1');
        uicontrol(...
          'style'                     , 'text', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   'q max',...
          'position'                  ,[50, hFigHeight-50-130,50,20], ...
          'tag'                       , 'text2');
        uicontrol(...
          'style'                     , 'text', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   'Left index',...
          'position'                  ,[20, hFigHeight-50-160,80,20], ...
          'tag'                       , 'text3');
        uicontrol(...
          'style'                     , 'text', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , uph, ...
          'string'                  ,   'Right index',...
          'position'                  ,[20, hFigHeight-50-180,80,20], ...
          'tag'                       , 'text4');



        % Fitting control
        baseHpos = 200; % horizontal position where the controls for parameters start.
        baseVpos = 70; % vertical position where the controls for parameters start.
        % baseVpos is essentially the space that the following 5 controls take.
        Fitbuttonwidth = 150;
        uicontrol(...
          'style'                     , 'edit', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'right', ...
          'parent'                    , figH, ...
          'position'                  ,[baseHpos+20, 20,Fitbuttonwidth,25], ...
          'tag'                       , 'edit_savefilename');

        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , figH, ...
          'string'                  ,   'Load Saved Result',...
          'callback'                , @pushbutton_Load_Callback,...
          'position'                  ,[baseHpos+Fitbuttonwidth+50,10,Fitbuttonwidth,25], ...
          'tag'                       , 'pushbutton_Load');
        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , figH, ...
          'string'                  ,   'Save Results',...
          'callback'                , @pushbutton_Save_Callback, ...
          'position'                  ,[baseHpos+Fitbuttonwidth+50, 35,Fitbuttonwidth,25], ...
          'tag'                       , 'pushbutton_Save');
        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , figH, ...
          'string'                  ,   'Fit',...
          'callback'                , @pushbutton_Fit_Callback,...
          'position'                  ,[baseHpos+200, 60,Fitbuttonwidth,25], ...
          'tag'                       , 'pushbutton_Fit');
        uicontrol(...
          'style'                     , 'pushbutton', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'center', ...
          'parent'                    , figH, ...
          'string'                  ,   'Simulate',...
          'callback'                , @pushbutton_simulate_Callback,...
          'position'                  ,[baseHpos+20, 60,Fitbuttonwidth,25], ...
          'tag'                       , 'pushbutton_simulate');


        for i=1:numel(pnames)
            position(1) = baseHpos + 20;
            position(2) = 20*(i-1) + 25 + baseVpos;
            label = pnames{i};
            if isempty(strfind(label, 'option'))
                generate_uifit(position, label, bestP.(pnames{i}), i, figH);
            end
        end
    end
    function generate_uifit(position, label, value, indx, figH)
        pLabel.h = 20;
        pLabN.h = pLabel.h;
        pVal.h = pLabel.h;
        pFit.h = pLabel.h;
        pLB.h = pLabel.h;
        pUB.h = pLabel.h;

        pLabN.w = 10;
        pLabel.w = 50;
        pVal.w = 80;
        pFit.w = 40;
        pLB.w = 60;
        pUB.w = 60;

        uicontrol(...
          'style'                     , 'text', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'left', ...
          'string'                  , num2str(indx), ...
          'parent'                    , figH, ...
          'position'                  ,[position(1), position(2),pLabN.w,pLabN.h], ...
          'tag'                       , ['text_pN', num2str(indx)]);

        uicontrol(...
          'style'                     , 'text', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'left', ...
          'string'                  , label, ...
          'parent'                    , figH, ...
          'position'                  ,[position(1)+pLabN.w, position(2), pLabel.w,pLabel.h], ...
          'tag'                       , ['text_p', num2str(indx)]);

        uicontrol(...
          'style'                     , 'edit', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'left', ...
          'string'                  , sprintf('%0.3f', value(1)), ...
          'parent'                    , figH, ...
          'position'                  ,[position(1)+pLabN.w+pLabel.w+10, position(2),pVal.w,pVal.h], ...
          'tag'                       , ['edit_p', num2str(indx)]);

        uicontrol(...
          'style'                     , 'checkbox', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'left', ...
          'string'                  , 'Fit', ...
          'parent'                    , figH, ...
          'position'                  ,[position(1)+pLabN.w+pLabel.w+pVal.w + 20, position(2),pFit.w,pFit.h], ...
          'tag'                       , ['checkbox_Fit', num2str(indx)]);


        uicontrol(...
          'style'                     , 'edit', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'left', ...
          'parent'                    , figH, ...
          'position'                  ,[position(1)+pLabN.w+pLabel.w+pVal.w + pFit.w + 30, position(2),pLB.w,pLB.h], ...
          'tag'                       , ['edit_LB', num2str(indx)]);

        uicontrol(...
          'style'                     , 'edit', ...
          'backgroundcolor'           , [1,1,1], ...
          'horizontalalignment'       , 'left', ...
          'parent'                    , figH, ...
          'position'                  ,[position(1)+pLabN.w+pLabel.w+pVal.w + pFit.w + pLB.w + 40, position(2),pUB.w,pUB.h], ...
          'tag'                       , ['edit_UB', num2str(indx)]);
    end
    function setplot(LineHandle, data)
        for i=1:numel(LineHandle)
            if iscell(data);
                dt = data{i};
            else
                dt = data;
            end
            set(LineHandle(i), 'ydata', dt);
        end
    end
    function pushbutton_simulate_Callback(varargin)

    % fit parameter reading
        p = BLFit_readparameters(handles);

        fit = evalin('base', 'fit');
        loadfitparam = 0 ;
        % fit parameter reading
        if sum(p) == 0
            loadfitparam = 1;
        end
        if sum(isnan(p))
            loadfitparam = 1;
        end
        if loadfitparam
            p = fit.param;
            BLFit_setparameters(handles, p);
        end

        if ~isempty(pre_fitFunHandle)
            pre_fitFunHandle(p);
        end

        Iq = fitFunHandle(p, fit.xd);
        setplot(LineHandle, Iq)
        if iscell(data)
            for i=1:numel(data)
                fit.fit{i} = [fit.xd{i}, Iq{i}, fit.yd{i}];
            end
        else
            fit.fit = [fit.xd(:), Iq(:), fit.yd(:)];
        end
        assignin('base', 'fit', fit);
    end
    function pushbutton_Fit_Callback(varargin)
        %% Setup data to fit.
        % load data and roi
        fit = evalin('base', 'fit');
        if isfield(fit, 'fitlineh')
            try
                delete(fit.fitlineh)
            catch
                fit.fitlineh = [];
            end
        end

        if isfield(fit, 'roi')
            roi = fit.roi;
        else
            roi = [];
        end
        
        NdataSet = fit.NdataSet;
        % if NdataSet is not 0, multiple simultanous fit...
        for i=1:NdataSet
            data2fit = fit.data{i};
            if isempty(roi)
                q{i} = data2fit(:,1);
                y{i} = data2fit(:,2);
            elseif numel(roi) == 2
                q{i} = data2fit(roi(1,1):roi(1,2),1);
                y{i} = data2fit(roi(1,1):roi(1,2),2);
            else
                q{i} = data2fit(roi(i,1):roi(i,2),1);
                y{i} = data2fit(roi(i,1):roi(i,2),2);
            end
            fit.fitlineh = line('xdata', q{i}, 'ydata', ...
                y{i}, 'color','r', ...
                'parent', findobj(fit.figh, 'type', 'axes'));
        end
        assignin('base', 'fit', fit)

        if nargin < 3
            handles = fit.handles;
        end
        
        % If there is only a set of data of interest.
        if numel(q) == 1
            q = q{1}(:);
            y = y{1}(:);
        end

        %% Setup fitting parameters.
        % fit parameter reading ==============================
        [p, qfit, LB, UB] = BLFit_readparameters(handles);
        % ====================================================
        NLPstart = p';
        for i=1:numel(p)
            if ~qfit(i)
                LB(i) = p(i);
                UB(i) = p(i);
            end
        end

        %% Run pre-fit function
        if ~isempty(pre_fitFunHandle)
            pre_fitFunHandle(p);
        end
        
        %% Setup Constraints for fitting.
        % Load matrices for contraints from 'base'
        NONLCON = [];
        isLinIneq = 1;
        try
            A = evalin('base', 'A');
            B = evalin('base', 'B');
            if size(A, 2) ~= numel(p)
                isLinIneq = 0;
            end
            if size(A, 1) ~= numel(B);
                isLinIneq = 0;
            end
        catch
            isLinIneq = 0;
        end
        if ~isLinIneq
            A = [];B = [];
        end
        isLinEq = 1;
        try
            Aeq = evalin('base', 'Aeq');
            Beq = evalin('base', 'Beq');
            if size(Aeq, 2) ~= numel(p)
                isLinEq = 0;
            end
            if size(Aeq, 1) ~= numel(Beq);
                isLinEq = 0;
            end
        catch
            isLinEq = 0;
        end
        if ~isLinEq
            Aeq = [];Beq = [];
        end
        if isLinEq % if there is linear equality contraint, release other constraint.
            A = [];B = [];
        end
        % Constraint done .................................................
        %% Setup options
        options = optimset('fminsearch');
        options = optimset(options, 'TolX',0.0000001);
        options = optimset(options, 'PlotFcns',@optimplotx);
        options = optimset(options, 'OutputFcn',@BLFit_outfun);
        options = optimset(options, 'MaxIter',500);
        
        %% Data fitting
        if exist('fmincon', 'file')
           INLP = fmincon(@(x) fitfunction(x, y, q),NLPstart,A,B,Aeq,Beq,LB,UB,NONLCON,options);
        else
            INLP = fminsearchcon(@(x) fitfunction(x, y, q),NLPstart,LB,UB, A, B, [], options);
        end
        fit.param = INLP;
        BLFit_setparameters(handles, INLP)
        
        %% Aftermath
        pushbutton_simulate_Callback

        % Return results ===========
    end
    function pushbutton_Save_Callback(varargin)
        fn = get(handles.edit_savefilename, 'string');
        BLFit_save(handles, fn)
    end
    function pb_loaddata_Callback(varargin)
        BLFit_Loaddata(handles)
        BLFit_pickFigure(str2double(get(handles.edit_Figure, 'string')), handles)
    end
    function pb_LL_Callback(varargin)
        hObject = varargin{1};
        BLFit_Indexcallback(hObject, handles)
    end
    function pb_LU_Callback(varargin)
        hObject = varargin{1};
        BLFit_Indexcallback(hObject, handles)
    end
    function pb_RL_Callback(varargin)
        hObject = varargin{1};
        BLFit_Indexcallback(hObject, handles)
    end
    function pb_RU_Callback(varargin)
        hObject = varargin{1};
        BLFit_Indexcallback(hObject, handles)
    end
    function pushbutton_qselect_Callback(varargin)
        BLFit_qselect
    end
    function edit_Lindex_Callback(varargin)
        BLFit_index_callback
    end
    function edit_Rindex_Callback(varargin)
        BLFit_index_callback
    end 
    function edit_Lq_Callback(varargin)
        BLFit_qindex_callback
    end
    function edit_Rq_Callback(varargin)
        BLFit_qindex_callback
    end
    function edit_Figure_Callback(varargin)
        hObject = varargin{1};
        Figh = str2double(get(hObject, 'string'));
        BLFit_pickFigure(Figh, handles)
    end
    function pushbutton_Load_Callback(varargin)
        BLFit_LoadSaved(handles)
    end
    function cv = fitfunction(p, y, q)

        % Calculation function
        %[predY, fit] = multivoight(parameters, q);
        % q : it can be either array or a cell for multiple data set
        % y : it can be either array or a cell for multiple data set
        % q and y should have the same length.
        Iq = fitFunHandle(p, q);
        assignin('base', 'Iq', Iq);
        if iscell(Iq)
            Iqarray = cell2mat(Iq);
            Iqarray = Iqarray(:);
            yarray = cell2mat(y);
            yarray = yarray(:);
        else
            Iqarray = Iq;
            yarray = y;
        end
        cv = chi_squared(yarray, Iqarray, 5);
        %fit.fit = [q(:), predY(:), y(:)];
    end



end